import { Request, Response } from "express"; import { Form } from "../models/Form"; export const createForm = async (req: Request, res: Response) => { try { if (!req.user?._id) { return res.status(401).send({ error: "User not authenticated" }); } const form = new Form({ ...req.body, userId: req.user._id }); await form.save(); res.status(201).send(form); } catch (error) { res.status(400).send(error); } }; export const getForms = async (req: Request, res: Response) => { try { if (!req.user?._id) { return res.status(401).send({ error: "User not authenticated" }); } const forms = await Form.find({ userId: req.user._id }); res.send(forms); } catch (error) { res.status(500).send(error); } }; export const getForm = async (req: Request, res: Response) => { try { if (!req.user?._id) { return res.status(401).send({ error: "User not authenticated" }); } const form = await Form.findOne({ _id: req.params.id, userId: req.user._id }); if (!form) { return res.status(404).send(); } res.send(form); } catch (error) { res.status(500).send(error); } }; export const updateForm = async (req: Request, res: Response) => { try { if (!req.user?._id) { return res.status(401).send({ error: "User not authenticated" }); } const form = await Form.findOneAndUpdate({ _id: req.params.id, userId: req.user._id }, req.body, { new: true }); if (!form) { return res.status(404).send(); } res.send(form); } catch (error) { res.status(400).send(error); } }; export const deleteForm = async (req: Request, res: Response) => { try { if (!req.user?._id) { return res.status(401).send({ error: "User not authenticated" }); } const form = await Form.findOneAndDelete({ _id: req.params.id, userId: req.user._id }); if (!form) { return res.status(404).send(); } res.send(form); } catch (error) { res.status(500).send(error); } };
